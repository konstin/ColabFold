name: Test

on: [ push, pull_request ]

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # colab runs on 3.7, 3.9 is the latest published version
        python-version: [ '3.7', '3.9' ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}


      - name: Update PATH
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Path for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Install poetry
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - --version 1.1.8
          poetry config virtualenvs.in-project true
      - name: Install poetry
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing).Content | python -
          poetry config virtualenvs.in-project true
      - uses: actions/cache@v1
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install depencies
        run: poetry install
      - name: Run tests
        run: poetry run python -m pytest
